{"version":3,"sources":["api/users.ts","utils/userFind.ts","components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","findUser","todoUserId","usersFromServer","find","user","getMaxTodoId","todos","ids","map","todo","Math","max","Form","addTodo","React","useState","newTodoName","setNewTodoName","selectedUserId","setSelectedUserId","todoNameError","setTodoNameError","selectedUserError","setSelectedUserError","action","method","onSubmit","event","preventDefault","isDisabled","trim","newTodo","title","completed","userId","className","htmlFor","placeholder","type","value","onChange","target","onBlur","disabled","users","UserInfo","href","TodoInfo","TodoList","todosWiaUser","App","todoItems","setTodoItems","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89f693e6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function findUser(todoUserId:number) {\n  return usersFromServer.find(user => user.id === todoUserId) || null;\n}\n","import React from 'react';\nimport users from '../../api/users';\nimport { Todo } from '../../types/todo';\nimport { findUser } from '../../utils/userFind';\n\nfunction getMaxTodoId(todos: Todo[]) {\n  const ids = todos.map(todo => todo.id);\n\n  return Math.max(...ids, 0) + 1;\n}\n\ntype Props = {\n  addTodo: (todo: Todo) => void,\n  todos: Todo[]\n};\n\nexport const Form: React.FC<Props> = ({ addTodo, todos }) => {\n  const [newTodoName, setNewTodoName] = React.useState('');\n  const [selectedUserId, setSelectedUserId] = React.useState(0);\n  const [todoNameError, setTodoNameError] = React.useState(false);\n  const [selectedUserError, setSelectedUserError] = React.useState(false);\n\n  const handlerReser = () => {\n    setNewTodoName('');\n    setSelectedUserId(0);\n  };\n\n  function handleSubmit(event:React.FormEvent) {\n    event.preventDefault();\n    const isDisabled = !newTodoName.trim();\n\n    setTodoNameError(isDisabled);\n    if (!newTodoName.trim()) {\n      setTodoNameError(true);\n    }\n\n    if (!selectedUserId) {\n      setSelectedUserError(true);\n    }\n\n    if (newTodoName.trim() && selectedUserId) {\n      const newTodo: Todo = {\n        id: getMaxTodoId(todos),\n        title: newTodoName,\n        completed: false,\n        userId: selectedUserId,\n        user: findUser(selectedUserId),\n      };\n\n      handlerReser();\n      addTodo(newTodo);\n    }\n  }\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"todoName\">Title:</label>\n        <input\n          placeholder=\"Enter a title\"\n          id=\"todoName\"\n          name=\"todoName\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={newTodoName}\n          onChange={event => {\n            setNewTodoName(event.target.value);\n            setTodoNameError(!event.target.value);\n          }}\n          onBlur={event => setTodoNameError(!event.target.value.trim())}\n        />\n        {todoNameError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">User:</label>\n        <select\n          id=\"userSelect\"\n          data-cy=\"userSelect\"\n          name=\"todoUser\"\n          value={selectedUserId}\n          onChange={event => {\n            setSelectedUserId(+event.target.value);\n            setSelectedUserError(!+event.target.value);\n          }}\n          onBlur={event => setSelectedUserError(!+event.target.value)}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n        {selectedUserError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport { Form } from './components/Form/Form';\nimport { TodoList } from './components/TodoList';\nimport { findUser } from './utils/userFind';\nimport { Todo } from './types/todo';\n\nconst todosWiaUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoItems, setTodoItems] = useState<Todo[]>(todosWiaUser);\n  const addTodo = (newTodo: Todo) => {\n    setTodoItems(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form addTodo={addTodo} todos={todoItems} />\n      <TodoList todos={todoItems} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}